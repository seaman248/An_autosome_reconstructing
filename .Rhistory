<<<<<<< HEAD
gene_type = 'side_blocks', annotation_height = 2, annotation_cex = 1
)
source('./R/2nd clean.R')
source('./R/functions/xlimsGen.R')
source('./R/functions/autoGen.R')
# add through coordinate for every sp==============================================================
#alb---------------------------------------------------------------------------------------------
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
alb_chr_order <- c('3L', '3R')
alb_chr_strand <- c(FALSE, FALSE)
alb_lims <- xlimsGen(alb_chr_order, alb_chr_strand, cGeneTable$alb_start, cGeneTable$alb_end, cGeneTable$alb_chr)
alb_annot <- annot_gen(alb_lims, alb_chr_order)
atr_2R_genes <- cGeneTable[cGeneTable$atr_chr=='2R',]
#alb_annot <- annotation(x1=atr_2R_genes$alb_start, text = atr_2R_genes$alb_ID, rot=30)
#atr---------------------------------------------------------------------------------------------
atr_chr_order <- c('2L', '2R', '3L')
atr_chr_strand <- c(FALSE, FALSE, TRUE)
atr_lims <- xlimsGen(atr_chr_order, atr_chr_strand, cGeneTable$atr_start, cGeneTable$atr_end, cGeneTable$atr_chr)
atr_annot <- annot_gen(atr_lims, atr_chr_order)
#gam---------------------------------------------------------------------------------------------
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
gam_chr_order <- c('2L', '3L')
gam_chr_strand <- c(FALSE, FALSE)
gam_lims <- xlimsGen(gam_chr_order, gam_chr_strand, cGeneTable$gam_start, cGeneTable$gam_end, cGeneTable$gam_chr)
gam_annot <- annot_gen(gam_lims, gam_chr_order)
#create comparisons
alb_atr_comparison <- as.comparison(data.frame(
start1=cGeneTable$alb_start, end1=cGeneTable$alb_end,
start2=cGeneTable$atr_start, end2=cGeneTable$atr_end
))
atr_gam_comparition <- as.comparison(data.frame(
start1=cGeneTable$atr_start, end1=cGeneTable$atr_end,
start2=cGeneTable$gam_start, end2=cGeneTable$gam_end
))
# create dna_seqs
alb_col <- rep('red', nrow(cGeneTable))
alb_col[cGeneTable$alb_strand=='-1'] <- 'blue'
alb_seq <- dna_seg(data.frame(
name=cGeneTable$alb_ID,
start=cGeneTable$alb_start,
end=cGeneTable$alb_end,
strand=cGeneTable$alb_strand,
col=alb_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
atr_col <- rep('red', nrow(cGeneTable))
atr_col[cGeneTable$atr_strand=='-1'] <- 'blue'
atr_seq <- dna_seg(data.frame(
name=cGeneTable$atr_ID,
start=cGeneTable$atr_start,
end=cGeneTable$atr_end,
strand=as.integer(cGeneTable$atr_strand),
col=atr_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
gam_col <- rep('red', nrow(cGeneTable))
gam_col[cGeneTable$gam_strand=='-1'] <- 'blue'
gam_seq <- dna_seg(data.frame(
name=cGeneTable$gam_ID,
start=cGeneTable$gam_start,
end=cGeneTable$gam_end,
strand=cGeneTable$gam_strand,
col=gam_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
dna_seqs <- list(alb_seq, atr_seq, gam_seq)
names(dna_seqs) <- c('An. albimanus', 'An. atroparvus', 'An. gambiae')
#plot
plot_gene_map(
dna_segs = dna_seqs,
annotations = list(alb_annot, atr_annot, gam_annot),
comparisons = list(alb_atr_comparison, atr_gam_comparition),
xlims = list(alb_lims, atr_lims, gam_lims),
scale = FALSE, dna_seg_scale = TRUE,
gene_type = 'side_blocks', annotation_height = 2, annotation_cex = 1
)
=======
cGeneTable <- cGeneTable %>%
filter(gam_chr=='3L'|gam_chr=='2L', atr_chr!='3R')
library("plyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
library("dplyr", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
library("genoPlotR", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
source('./R/clean_first_data.R')
source('./R/functions/through_genes.R')
atr_genes <-  dGeneTable %>%
select(atr_ID, atr_scf, atr_start, atr_end, atr_strand)
atr_scf_order <- read.csv2('./data/atr_order.csv')
sum(atr_scf_order$Size)
atr_genes <- through_num(atr_genes, atr_scf_order)
max(na.omit(atr_genes$tEnd))
source('./R/functions/through_genes.R')
atr_genes <-  dGeneTable %>%
select(atr_ID, atr_scf, atr_start, atr_end, atr_strand)
atr_scf_order <- read.csv2('./data/atr_order.csv')
sum(atr_scf_order$Size)
atr_genes <- through_num(atr_genes, atr_scf_order)
max(na.omit(atr_genes$tEnd))
# insert atr_genes into GENETABLE
cGeneTable <- dGeneTable[,c(1:5, 11:15)]
rm(dGeneTable)
cGeneTable[,11:15] <- atr_genes
names(cGeneTable) <- c(names(cGeneTable[,1:10]), 'atr_ID', 'atr_chr', 'atr_start', 'atr_end', 'atr_strand')
rm(atr_genes)
# clean data
cGeneTable <- na.omit(cGeneTable)
cGeneTable <- cGeneTable %>%
filter(gam_chr=='3L'|gam_chr=='2L', atr_chr!='3R')
>>>>>>> b30952a246b2aff33f2c7f281deec1c73c538eb6
source('./R/2nd clean.R')
source('./R/functions/xlimsGen.R')
source('./R/functions/autoGen.R')
# add through coordinate for every sp==============================================================
#alb---------------------------------------------------------------------------------------------
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
alb_chr_order <- c('3L', '3R')
alb_chr_strand <- c(FALSE, FALSE)
alb_lims <- xlimsGen(alb_chr_order, alb_chr_strand, cGeneTable$alb_start, cGeneTable$alb_end, cGeneTable$alb_chr)
alb_annot <- annot_gen(alb_lims, alb_chr_order)
atr_2R_genes <- cGeneTable[cGeneTable$atr_chr=='2R',]
#alb_annot <- annotation(x1=atr_2R_genes$alb_start, text = atr_2R_genes$alb_ID, rot=30)
#atr---------------------------------------------------------------------------------------------
atr_chr_order <- c('2L', '2R', '3L')
atr_chr_strand <- c(FALSE, FALSE, TRUE)
atr_lims <- xlimsGen(atr_chr_order, atr_chr_strand, cGeneTable$atr_start, cGeneTable$atr_end, cGeneTable$atr_chr)
atr_annot <- annot_gen(atr_lims, atr_chr_order)
#gam---------------------------------------------------------------------------------------------
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
gam_chr_order <- c('2L', '3L')
gam_chr_strand <- c(FALSE, FALSE)
gam_lims <- xlimsGen(gam_chr_order, gam_chr_strand, cGeneTable$gam_start, cGeneTable$gam_end, cGeneTable$gam_chr)
gam_annot <- annot_gen(gam_lims, gam_chr_order)
#create comparisons
alb_atr_comparison <- as.comparison(data.frame(
start1=cGeneTable$alb_start, end1=cGeneTable$alb_end,
start2=cGeneTable$atr_start, end2=cGeneTable$atr_end
))
atr_gam_comparition <- as.comparison(data.frame(
start1=cGeneTable$atr_start, end1=cGeneTable$atr_end,
start2=cGeneTable$gam_start, end2=cGeneTable$gam_end
))
# create dna_seqs
alb_col <- rep('red', nrow(cGeneTable))
alb_col[cGeneTable$alb_strand=='-1'] <- 'blue'
alb_seq <- dna_seg(data.frame(
name=cGeneTable$alb_ID,
start=cGeneTable$alb_start,
end=cGeneTable$alb_end,
strand=cGeneTable$alb_strand,
col=alb_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
atr_col <- rep('red', nrow(cGeneTable))
atr_col[cGeneTable$atr_strand=='-1'] <- 'blue'
atr_seq <- dna_seg(data.frame(
name=cGeneTable$atr_ID,
start=cGeneTable$atr_start,
end=cGeneTable$atr_end,
strand=as.integer(cGeneTable$atr_strand),
col=atr_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
gam_col <- rep('red', nrow(cGeneTable))
gam_col[cGeneTable$gam_strand=='-1'] <- 'blue'
gam_seq <- dna_seg(data.frame(
name=cGeneTable$gam_ID,
start=cGeneTable$gam_start,
end=cGeneTable$gam_end,
strand=cGeneTable$gam_strand,
col=gam_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
<<<<<<< HEAD
dna_seqs <- list(alb_seq, atr_seq, gam_seq)
names(dna_seqs) <- c('An. albimanus', 'An. atroparvus', 'An. gambiae')
#plot
plot_gene_map(
dna_segs = dna_seqs,
annotations = list(alb_annot, atr_annot, gam_annot),
comparisons = list(alb_atr_comparison, atr_gam_comparition),
xlims = list(alb_lims, atr_lims, gam_lims),
scale = FALSE, dna_seg_scale = TRUE,
gene_type = 'side_blocks', annotation_height = 2, annotation_cex = 1
)
source('./R/2nd clean.R')
source('./R/functions/xlimsGen.R')
source('./R/functions/autoGen.R')
# add through coordinate for every sp==============================================================
#alb---------------------------------------------------------------------------------------------
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
alb_chr_order <- c('3L', '3R')
alb_chr_strand <- c(FALSE, FALSE)
alb_lims <- xlimsGen(alb_chr_order, alb_chr_strand, cGeneTable$alb_start, cGeneTable$alb_end, cGeneTable$alb_chr)
alb_annot <- annot_gen(alb_lims, alb_chr_order)
atr_2R_genes <- cGeneTable[cGeneTable$atr_chr=='2R',]
#alb_annot <- annotation(x1=atr_2R_genes$alb_start, text = atr_2R_genes$alb_ID, rot=30)
#atr---------------------------------------------------------------------------------------------
atr_chr_order <- c('2L', '2R', '3L')
atr_chr_strand <- c(FALSE, FALSE, TRUE)
atr_lims <- xlimsGen(atr_chr_order, atr_chr_strand, cGeneTable$atr_start, cGeneTable$atr_end, cGeneTable$atr_chr)
atr_annot <- annot_gen(atr_lims, atr_chr_order)
#gam---------------------------------------------------------------------------------------------
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
gam_chr_order <- c('2L', '3L')
gam_chr_strand <- c(FALSE, FALSE)
gam_lims <- xlimsGen(gam_chr_order, gam_chr_strand, cGeneTable$gam_start, cGeneTable$gam_end, cGeneTable$gam_chr)
gam_annot <- annot_gen(gam_lims, gam_chr_order)
#create comparisons
alb_atr_comparison <- as.comparison(data.frame(
start1=cGeneTable$alb_start, end1=cGeneTable$alb_end,
start2=cGeneTable$atr_start, end2=cGeneTable$atr_end
))
atr_gam_comparition <- as.comparison(data.frame(
start1=cGeneTable$atr_start, end1=cGeneTable$atr_end,
start2=cGeneTable$gam_start, end2=cGeneTable$gam_end
))
# create dna_seqs
alb_col <- rep('red', nrow(cGeneTable))
alb_col[cGeneTable$alb_strand=='-1'] <- 'blue'
alb_seq <- dna_seg(data.frame(
name=cGeneTable$alb_ID,
start=cGeneTable$alb_start,
end=cGeneTable$alb_end,
strand=cGeneTable$alb_strand,
col=alb_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
atr_col <- rep('red', nrow(cGeneTable))
atr_col[cGeneTable$atr_strand=='-1'] <- 'blue'
atr_seq <- dna_seg(data.frame(
name=cGeneTable$atr_ID,
start=cGeneTable$atr_start,
end=cGeneTable$atr_end,
strand=as.integer(cGeneTable$atr_strand),
col=atr_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
gam_col <- rep('red', nrow(cGeneTable))
gam_col[cGeneTable$gam_strand=='-1'] <- 'blue'
gam_seq <- dna_seg(data.frame(
name=cGeneTable$gam_ID,
start=cGeneTable$gam_start,
end=cGeneTable$gam_end,
strand=cGeneTable$gam_strand,
col=gam_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
dna_seqs <- list(alb_seq, atr_seq, gam_seq)
names(dna_seqs) <- c('An. albimanus', 'An. atroparvus', 'An. gambiae')
=======
dna_seqs <- list(alb_seq, atr_seq, gam_seq)
names(dna_seqs) <- c('alb 3L-\\-3R(rev)', 'atr 3L-\\-2R-\\-2L', 'gam 3L-\\-2L')
>>>>>>> b30952a246b2aff33f2c7f281deec1c73c538eb6
#plot
plot_gene_map(
dna_segs = dna_seqs,
annotations = list(alb_annot, atr_annot, gam_annot),
comparisons = list(alb_atr_comparison, atr_gam_comparition),
<<<<<<< HEAD
xlims = list(alb_lims, atr_lims, gam_lims),
scale = FALSE, dna_seg_scale = TRUE,
gene_type = 'side_blocks', annotation_height = 2, annotation_cex = 1
)
source('./R/2nd clean.R')
source('./R/functions/xlimsGen.R')
source('./R/functions/autoGen.R')
=======
xlims = list(alb_lims, atr_lims, gam_lims)
)
atr_lims <- c(
max(cGeneTable$atr_start[cGeneTable$atr_chr == '2R']),
min(cGeneTable$atr_end[cGeneTable$atr_chr == '2R']),
max(cGeneTable$atr_start[cGeneTable$atr_chr == '2L']),
min(cGeneTable$atr_end[cGeneTable$atr_chr == '2L']),
max(cGeneTable$atr_start[cGeneTable$atr_chr == '3L']),
min(cGeneTable$atr_end[cGeneTable$atr_chr == '3L'])
)
plot_gene_map(
dna_segs = dna_seqs,
comparisons = list(alb_atr_comparison, atr_gam_comparition),
xlims = list(alb_lims, atr_lims, gam_lims)
)
atr_lims <- c(
max(cGeneTable$atr_start[cGeneTable$atr_chr == '2R']),
min(cGeneTable$atr_end[cGeneTable$atr_chr == '2R']),
min(cGeneTable$atr_start[cGeneTable$atr_chr == '2L']),
max(cGeneTable$atr_end[cGeneTable$atr_chr == '2L']),
max(cGeneTable$atr_start[cGeneTable$atr_chr == '3L']),
min(cGeneTable$atr_end[cGeneTable$atr_chr == '3L'])
)
plot_gene_map(
dna_segs = dna_seqs,
comparisons = list(alb_atr_comparison, atr_gam_comparition),
xlims = list(alb_lims, atr_lims, gam_lims)
)
atr_lims <- c(
min(cGeneTable$atr_start[cGeneTable$atr_chr == '2L']),
max(cGeneTable$atr_end[cGeneTable$atr_chr == '2L']),
max(cGeneTable$atr_start[cGeneTable$atr_chr == '2R']),
min(cGeneTable$atr_end[cGeneTable$atr_chr == '2R']),
max(cGeneTable$atr_start[cGeneTable$atr_chr == '3L']),
min(cGeneTable$atr_end[cGeneTable$atr_chr == '3L'])
)
plot_gene_map(
dna_segs = dna_seqs,
comparisons = list(alb_atr_comparison, atr_gam_comparition),
xlims = list(alb_lims, atr_lims, gam_lims)
)
names(dna_seqs) <- c('alb 3L↘ | 3R↘', 'atr 2L↗ | 2R↘ | 3L↘', 'gam 2L↘ | 3L↗')
#plot
plot_gene_map(
dna_segs = dna_seqs,
comparisons = list(alb_atr_comparison, atr_gam_comparition),
xlims = list(alb_lims, atr_lims, gam_lims)
)
plot_gene_map(
dna_segs = dna_seqs,
comparisons = list(alb_atr_comparison, atr_gam_comparition),
xlims = list(alb_lims, atr_lims, gam_lims)
)
require('dplyr', 'genoplotr')
source('./R/2nd clean.R')
>>>>>>> b30952a246b2aff33f2c7f281deec1c73c538eb6
# add through coordinate for every sp==============================================================
#alb---------------------------------------------------------------------------------------------
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
alb_chr_order <- c('3L', '3R')
alb_chr_strand <- c(FALSE, FALSE)
alb_lims <- xlimsGen(alb_chr_order, alb_chr_strand, cGeneTable$alb_start, cGeneTable$alb_end, cGeneTable$alb_chr)
alb_annot <- annot_gen(alb_lims, alb_chr_order)
atr_2R_genes <- cGeneTable[cGeneTable$atr_chr=='2R',]
#alb_annot <- annotation(x1=atr_2R_genes$alb_start, text = atr_2R_genes$alb_ID, rot=30)
#atr---------------------------------------------------------------------------------------------
<<<<<<< HEAD
atr_chr_order <- c('2L', '2R', '3L')
atr_chr_strand <- c(FALSE, FALSE, TRUE)
atr_lims <- xlimsGen(atr_chr_order, atr_chr_strand, cGeneTable$atr_start, cGeneTable$atr_end, cGeneTable$atr_chr)
atr_annot <- annot_gen(atr_lims, atr_chr_order)
=======
atr_lims <- c(
min(cGeneTable$atr_start[cGeneTable$atr_chr == '2L']),
max(cGeneTable$atr_end[cGeneTable$atr_chr == '2L']),
max(cGeneTable$atr_start[cGeneTable$atr_chr == '2R']),
min(cGeneTable$atr_end[cGeneTable$atr_chr == '2R']),
max(cGeneTable$atr_start[cGeneTable$atr_chr == '3L']),
min(cGeneTable$atr_end[cGeneTable$atr_chr == '3L'])
)
>>>>>>> b30952a246b2aff33f2c7f281deec1c73c538eb6
#gam---------------------------------------------------------------------------------------------
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
gam_chr_order <- c('2L', '3L')
gam_chr_strand <- c(FALSE, FALSE)
gam_lims <- xlimsGen(gam_chr_order, gam_chr_strand, cGeneTable$gam_start, cGeneTable$gam_end, cGeneTable$gam_chr)
gam_annot <- annot_gen(gam_lims, gam_chr_order)
#create comparisons
alb_atr_comparison <- as.comparison(data.frame(
start1=cGeneTable$alb_start, end1=cGeneTable$alb_end,
start2=cGeneTable$atr_start, end2=cGeneTable$atr_end
))
atr_gam_comparition <- as.comparison(data.frame(
start1=cGeneTable$atr_start, end1=cGeneTable$atr_end,
start2=cGeneTable$gam_start, end2=cGeneTable$gam_end
))
# create dna_seqs
alb_col <- rep('red', nrow(cGeneTable))
alb_col[cGeneTable$alb_strand=='-1'] <- 'blue'
alb_seq <- dna_seg(data.frame(
name=cGeneTable$alb_ID,
start=cGeneTable$alb_start,
end=cGeneTable$alb_end,
strand=cGeneTable$alb_strand,
col=alb_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
atr_col <- rep('red', nrow(cGeneTable))
atr_col[cGeneTable$atr_strand=='-1'] <- 'blue'
atr_seq <- dna_seg(data.frame(
name=cGeneTable$atr_ID,
start=cGeneTable$atr_start,
end=cGeneTable$atr_end,
strand=as.integer(cGeneTable$atr_strand),
col=atr_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
gam_col <- rep('red', nrow(cGeneTable))
gam_col[cGeneTable$gam_strand=='-1'] <- 'blue'
gam_seq <- dna_seg(data.frame(
name=cGeneTable$gam_ID,
start=cGeneTable$gam_start,
end=cGeneTable$gam_end,
strand=cGeneTable$gam_strand,
col=gam_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
dna_seqs <- list(alb_seq, atr_seq, gam_seq)
<<<<<<< HEAD
names(dna_seqs) <- c('An. albimanus', 'An. atroparvus', 'An. gambiae')
=======
names(dna_seqs) <- c('alb 3L↘ | 3R↘', 'atr 2L↗ | 2R↘ | 3L↘', 'gam 2L↘ | 3L↗')
>>>>>>> b30952a246b2aff33f2c7f281deec1c73c538eb6
#plot
plot_gene_map(
dna_segs = dna_seqs,
annotations = list(alb_annot, atr_annot, gam_annot),
comparisons = list(alb_atr_comparison, atr_gam_comparition),
xlims = list(alb_lims, atr_lims, gam_lims),
scale = FALSE, dna_seg_scale = TRUE,
gene_type = 'side_blocks', annotation_height = 2, annotation_cex = 1
)
dna_seqs <- list(alb_seq, atr_seq, gam_seq)
alb_seq <- dna_seg(data.frame(
name=cGeneTable$alb_ID,
start=cGeneTable$alb_start,
end=cGeneTable$alb_end,
strand=cGeneTable$alb_strand,
col=alb_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
source('./R/2nd clean.R')
source('./R/clean_first_data.R')
source('./R/functions/through_genes.R')
# generate atr through coordinates of genes
atr_genes <-  dGeneTable %>%
select(atr_ID, atr_scf, atr_start, atr_end, atr_strand)
atr_scf_order <- read.csv2('./data/atr_order.csv')
sum(atr_scf_order$Size)
atr_genes <- through_num(atr_genes, atr_scf_order)
max(na.omit(atr_genes$tEnd))
# insert atr_genes into GENETABLE
cGeneTable <- dGeneTable[,c(1:5, 11:15)]
rm(dGeneTable)
cGeneTable[,11:15] <- atr_genes
names(cGeneTable) <- c(names(cGeneTable[,1:10]), 'atr_ID', 'atr_chr', 'atr_start', 'atr_end', 'atr_strand')
rm(atr_genes)
# clean data
cGeneTable <- na.omit(cGeneTable)
cGeneTable <- cGeneTable %>%
filter(gam_chr=='3L'|gam_chr=='2L', atr_chr!='3R')
View(cGeneTable)
source('./R/2nd clean.R')
source('./R/functions/xlimsGen.R')
source('./R/functions/autoGen.R')
# add through coordinate for every sp==============================================================
#alb---------------------------------------------------------------------------------------------
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
alb_chr_order <- c('3L', '3R')
alb_chr_strand <- c(FALSE, FALSE)
alb_lims <- xlimsGen(alb_chr_order, alb_chr_strand, cGeneTable$alb_start, cGeneTable$alb_end, cGeneTable$alb_chr)
alb_annot <- annot_gen(alb_lims, alb_chr_order)
atr_2R_genes <- cGeneTable[cGeneTable$atr_chr=='2R',]
#alb_annot <- annotation(x1=atr_2R_genes$alb_start, text = atr_2R_genes$alb_ID, rot=30)
#atr---------------------------------------------------------------------------------------------
<<<<<<< HEAD
atr_chr_order <- c('2L', '2R', '3L')
atr_chr_strand <- c(FALSE, FALSE, TRUE)
atr_lims <- xlimsGen(atr_chr_order, atr_chr_strand, cGeneTable$atr_start, cGeneTable$atr_end, cGeneTable$atr_chr)
atr_annot <- annot_gen(atr_lims, atr_chr_order)
=======
atr_lims <- c(
min(cGeneTable$atr_start[cGeneTable$atr_chr == '2L']),
max(cGeneTable$atr_end[cGeneTable$atr_chr == '2L']),
max(cGeneTable$atr_start[cGeneTable$atr_chr == '2R']),
min(cGeneTable$atr_end[cGeneTable$atr_chr == '2R']),
max(cGeneTable$atr_start[cGeneTable$atr_chr == '3L']),
min(cGeneTable$atr_end[cGeneTable$atr_chr == '3L'])
)
>>>>>>> b30952a246b2aff33f2c7f281deec1c73c538eb6
#gam---------------------------------------------------------------------------------------------
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
gam_chr_order <- c('2L', '3L')
gam_chr_strand <- c(FALSE, FALSE)
gam_lims <- xlimsGen(gam_chr_order, gam_chr_strand, cGeneTable$gam_start, cGeneTable$gam_end, cGeneTable$gam_chr)
gam_annot <- annot_gen(gam_lims, gam_chr_order)
#create comparisons
alb_atr_comparison <- as.comparison(data.frame(
start1=cGeneTable$alb_start, end1=cGeneTable$alb_end,
start2=cGeneTable$atr_start, end2=cGeneTable$atr_end
))
atr_gam_comparition <- as.comparison(data.frame(
start1=cGeneTable$atr_start, end1=cGeneTable$atr_end,
start2=cGeneTable$gam_start, end2=cGeneTable$gam_end
))
# create dna_seqs
alb_col <- rep('red', nrow(cGeneTable))
alb_col[cGeneTable$alb_strand=='-1'] <- 'blue'
alb_seq <- dna_seg(data.frame(
name=cGeneTable$alb_ID,
start=cGeneTable$alb_start,
end=cGeneTable$alb_end,
strand=cGeneTable$alb_strand,
col=alb_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
atr_col <- rep('red', nrow(cGeneTable))
atr_col[cGeneTable$atr_strand=='-1'] <- 'blue'
atr_seq <- dna_seg(data.frame(
name=cGeneTable$atr_ID,
start=cGeneTable$atr_start,
end=cGeneTable$atr_end,
strand=as.integer(cGeneTable$atr_strand),
col=atr_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
gam_col <- rep('red', nrow(cGeneTable))
gam_col[cGeneTable$gam_strand=='-1'] <- 'blue'
gam_seq <- dna_seg(data.frame(
name=cGeneTable$gam_ID,
start=cGeneTable$gam_start,
end=cGeneTable$gam_end,
strand=cGeneTable$gam_strand,
col=gam_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
dna_seqs <- list(alb_seq, atr_seq, gam_seq)
<<<<<<< HEAD
names(dna_seqs) <- c('An. albimanus', 'An. atroparvus', 'An. gambiae')
=======
names(dna_seqs) <- c('alb 3L↘ | 3R↘', 'atr 2L↗ | 2R↘ | 3L↘', 'gam 2L↘ | 3L↗')
>>>>>>> b30952a246b2aff33f2c7f281deec1c73c538eb6
#plot
plot_gene_map(
dna_segs = dna_seqs,
annotations = list(alb_annot, atr_annot, gam_annot),
comparisons = list(alb_atr_comparison, atr_gam_comparition),
xlims = list(alb_lims, atr_lims, gam_lims),
scale = FALSE, dna_seg_scale = TRUE,
gene_type = 'side_blocks', annotation_height = 2, annotation_cex = 1
)
require(c('dplyr', 'genoplotr'))
require(c('dplyr', 'genPlotR'))
library("genoPlotR", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.3")
source('./R/2nd clean.R')
source('./R/functions/xlimsGen.R')
source('./R/functions/autoGen.R')
# add through coordinate for every sp==============================================================
#alb---------------------------------------------------------------------------------------------
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
alb_chr_order <- c('3L', '3R')
alb_chr_strand <- c(FALSE, FALSE)
alb_lims <- xlimsGen(alb_chr_order, alb_chr_strand, cGeneTable$alb_start, cGeneTable$alb_end, cGeneTable$alb_chr)
alb_annot <- annot_gen(alb_lims, alb_chr_order)
atr_2R_genes <- cGeneTable[cGeneTable$atr_chr=='2R',]
#alb_annot <- annotation(x1=atr_2R_genes$alb_start, text = atr_2R_genes$alb_ID, rot=30)
#atr---------------------------------------------------------------------------------------------
atr_chr_order <- c('2L', '2R', '3L')
atr_chr_strand <- c(FALSE, FALSE, TRUE)
atr_lims <- xlimsGen(atr_chr_order, atr_chr_strand, cGeneTable$atr_start, cGeneTable$atr_end, cGeneTable$atr_chr)
atr_annot <- annot_gen(atr_lims, atr_chr_order)
#gam---------------------------------------------------------------------------------------------
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
gam_chr_order <- c('2L', '3L')
gam_chr_strand <- c(FALSE, FALSE)
gam_lims <- xlimsGen(gam_chr_order, gam_chr_strand, cGeneTable$gam_start, cGeneTable$gam_end, cGeneTable$gam_chr)
gam_annot <- annot_gen(gam_lims, gam_chr_order)
#create comparisons
alb_atr_comparison <- as.comparison(data.frame(
start1=cGeneTable$alb_start, end1=cGeneTable$alb_end,
start2=cGeneTable$atr_start, end2=cGeneTable$atr_end
))
atr_gam_comparition <- as.comparison(data.frame(
start1=cGeneTable$atr_start, end1=cGeneTable$atr_end,
start2=cGeneTable$gam_start, end2=cGeneTable$gam_end
))
# create dna_seqs
alb_col <- rep('red', nrow(cGeneTable))
alb_col[cGeneTable$alb_strand=='-1'] <- 'blue'
alb_seq <- dna_seg(data.frame(
name=cGeneTable$alb_ID,
start=cGeneTable$alb_start,
end=cGeneTable$alb_end,
strand=cGeneTable$alb_strand,
col=alb_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
atr_col <- rep('red', nrow(cGeneTable))
atr_col[cGeneTable$atr_strand=='-1'] <- 'blue'
atr_seq <- dna_seg(data.frame(
name=cGeneTable$atr_ID,
start=cGeneTable$atr_start,
end=cGeneTable$atr_end,
strand=as.integer(cGeneTable$atr_strand),
col=atr_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
gam_col <- rep('red', nrow(cGeneTable))
gam_col[cGeneTable$gam_strand=='-1'] <- 'blue'
gam_seq <- dna_seg(data.frame(
name=cGeneTable$gam_ID,
start=cGeneTable$gam_start,
end=cGeneTable$gam_end,
strand=cGeneTable$gam_strand,
col=gam_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
dna_seqs <- list(alb_seq, atr_seq, gam_seq)
<<<<<<< HEAD
=======
names(dna_seqs) <- c('alb 3L↘ | 3R↘', 'atr 2L↗ | 2R↘ | 3L↘', 'gam 2L↘ | 3L↗')
#plot
plot_gene_map(
dna_segs = dna_seqs,
comparisons = list(alb_atr_comparison, atr_gam_comparition),
xlims = list(alb_lims, atr_lims, gam_lims)
)
source('./R/2nd clean.R')
source('./R/functions/xlims_generator.R')
source('./R/functions/annot_generator.R')
# add through coordinate for every sp==============================================================
#alb---------------------------------------------------------------------------------------------
cGeneTable$alb_start[cGeneTable$alb_chr=='3L'] <-
cGeneTable$alb_start[cGeneTable$alb_chr=='3L'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3R'])
cGeneTable$alb_end[cGeneTable$alb_chr=='3L'] <-
cGeneTable$alb_end[cGeneTable$alb_chr=='3L'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3R'])
source('./R/functions/xlimsGen.R')
source('./R/functions/autoGen.R')
# add through coordinate for every sp==============================================================
#alb---------------------------------------------------------------------------------------------
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
alb_chr_order <- c('3L', '3R')
alb_chr_strand <- c(FALSE, FALSE)
alb_lims <- xlimsGen(alb_chr_order, alb_chr_strand, cGeneTable$alb_start, cGeneTable$alb_end, cGeneTable$alb_chr)
alb_annot <- annot_gen(alb_lims, alb_chr_order)
rm(alb_chr_order, alb_chr_strand)
#atr---------------------------------------------------------------------------------------------
alb_annot <- annot_gen(alb_lims, alb_chr_order)
atr_2R_genes <- cGeneTable[cGeneTable$atr_chr=='2R',]
#alb_annot <- annotation(x1=atr_2R_genes$alb_start, text = atr_2R_genes$alb_ID, rot=30)
#atr---------------------------------------------------------------------------------------------
atr_chr_order <- c('2L', '2R', '3L')
atr_chr_strand <- c(FALSE, FALSE, TRUE)
atr_lims <- xlimsGen(atr_chr_order, atr_chr_strand, cGeneTable$atr_start, cGeneTable$atr_end, cGeneTable$atr_chr)
atr_annot <- annot_gen(atr_lims, atr_chr_order)
atr_chr_order <- c('2L', '2R', '3L')
atr_chr_strand <- c(TRUE, FALSE, FALSE)
atr_lims <- xlimsGen(atr_chr_order, atr_chr_strand, cGeneTable$atr_start, cGeneTable$atr_end, cGeneTable$atr_chr)
atr_annot <- annot_gen(atr_lims, atr_chr_order)
rm(atr_chr_order, atr_chr_strand)
#gam---------------------------------------------------------------------------------------------
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
gam_chr_order <- c('2L', '3L')
gam_chr_strand <- c(FALSE, TRUE)
gam_lims <- xlimsGen(gam_chr_order, gam_chr_strand, cGeneTable$gam_star, cGeneTable$gam_end, cGeneTable$gam_chr)
gam_annot <- annot_gen(gam_lims, gam_chr_order)
rm(gam_chr_order, gam_chr_strand)
gam_chr_strand <- c(FALSE, FALSE)
gam_lims <- xlimsGen(gam_chr_order, gam_chr_strand, cGeneTable$gam_start, cGeneTable$gam_end, cGeneTable$gam_chr)
gam_annot <- annot_gen(gam_lims, gam_chr_order)
#create comparisons
alb_atr_comparison <- as.comparison(data.frame(
start1=cGeneTable$alb_start, end1=cGeneTable$alb_end,
start2=cGeneTable$atr_start, end2=cGeneTable$atr_end
))
atr_gam_comparition <- as.comparison(data.frame(
start1=cGeneTable$atr_start, end1=cGeneTable$atr_end,
start2=cGeneTable$gam_start, end2=cGeneTable$gam_end
))
# create dna_seqs
alb_col <- rep('red', nrow(cGeneTable))
alb_col[cGeneTable$alb_strand=='-1'] <- 'blue'
alb_seq <- dna_seg(data.frame(
name=cGeneTable$alb_ID,
start=cGeneTable$alb_start,
end=cGeneTable$alb_end,
strand=cGeneTable$alb_strand,
col=alb_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
atr_col <- rep('red', nrow(cGeneTable))
atr_col[cGeneTable$atr_strand=='-1'] <- 'blue'
atr_seq <- dna_seg(data.frame(
name=cGeneTable$atr_ID,
start=cGeneTable$atr_start,
end=cGeneTable$atr_end,
strand=as.integer(cGeneTable$atr_strand),
col=atr_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
gam_col <- rep('red', nrow(cGeneTable))
gam_col[cGeneTable$gam_strand=='-1'] <- 'blue'
gam_seq <- dna_seg(data.frame(
name=cGeneTable$gam_ID,
start=cGeneTable$gam_start,
end=cGeneTable$gam_end,
strand=cGeneTable$gam_strand,
col=gam_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
dna_seqs <- list(alb_seq, atr_seq, gam_seq)
>>>>>>> b30952a246b2aff33f2c7f281deec1c73c538eb6
names(dna_seqs) <- c('An. albimanus', 'An. atroparvus', 'An. gambiae')
#plot
plot_gene_map(
dna_segs = dna_seqs,
annotations = list(alb_annot, atr_annot, gam_annot),
comparisons = list(alb_atr_comparison, atr_gam_comparition),
<<<<<<< HEAD
=======
annotations = list(alb_annot, atr_annot, gam_annot),
xlims = list(alb_lims, atr_lims, gam_lims),
scale = FALSE, dna_seg_scale = TRUE, gene_type = 'side_blocks'
>>>>>>> b30952a246b2aff33f2c7f281deec1c73c538eb6
xlims = list(alb_lims, atr_lims, gam_lims),
scale = FALSE, dna_seg_scale = TRUE,
gene_type = 'side_blocks', annotation_height = 2, annotation_cex = 1
)
