atr_col[cGeneTable$atr_strand=='-1'] <- 'blue'
atr_seq <- dna_seg(data.frame(
name=cGeneTable$atr_ID,
start=cGeneTable$atr_start,
end=cGeneTable$atr_end,
strand=cGeneTable$atr_strand,
col=atr_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
View(cGeneTable)
dna_seg(data.frame(
name=cGeneTable$atr_ID,
start=cGeneTable$atr_start,
end=cGeneTable$atr_end,
strand=cGeneTable$atr_strand,
col=atr_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
data.frame(
name=cGeneTable$atr_ID,
start=cGeneTable$atr_start,
end=cGeneTable$atr_end,
strand=cGeneTable$atr_strand,
col=atr_col,
gene_type=rep('blocks', nrow(cGeneTable))
)
data.frame(
name=cGeneTable$alb_ID,
start=cGeneTable$alb_start,
end=cGeneTable$alb_end,
strand=cGeneTable$alb_strand,
col=alb_col,
gene_type=rep('blocks', nrow(cGeneTable))
)
gam_col <- rep('red', nrow(cGeneTable))
gam_col[cGeneTable$gam_strand=='-1'] <- 'blue'
gam_seq <- dna_seg(data.frame(
name=cGeneTable$gam_ID,
start=cGeneTable$gam_start,
end=cGeneTable$gam_end,
strand=cGeneTable$gam_strand,
col=gam_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
atr_col <- rep('red', nrow(cGeneTable))
atr_col[cGeneTable$atr_strand=='-1'] <- 'blue'
atr_seq <- dna_seg(data.frame(
name=cGeneTable$atr_ID,
start=cGeneTable$atr_start,
end=cGeneTable$atr_end,
strand=cGeneTable$atr_strand,
col=atr_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
data.frame(
name=cGeneTable$atr_ID,
start=cGeneTable$atr_start,
end=cGeneTable$atr_end,
strand=cGeneTable$atr_strand,
col=atr_col,
gene_type=rep('blocks', nrow(cGeneTable))
)
cGeneTable$atr_strand
typeof(cGeneTable$atr_strand)
c(cGeneTable$atr_strand)
typeof(cGeneTable$alb_strand)
as.integer(cGeneTable$atr_strand)
source('./R/clean_first_data.R')
source('./R/functions/through_genes.R')
# generate atr through coordinates of genes
atr_genes <-  dGeneTable %>%
select(atr_ID, atr_scf, atr_start, atr_end, atr_strand)
atr_genes <- through_num(atr_genes, read.csv2('./data/atr_order.csv'))
# insert atr_genes into GENETABLE
cGeneTable <- dGeneTable[,c(1:5, 11:15)]
rm(dGeneTable)
cGeneTable[,11:15] <- atr_genes
names(cGeneTable) <- c(names(cGeneTable[,1:10]), 'atr_ID', 'atr_chr', 'atr_start', 'atr_end', 'atr_strand')
rm(atr_genes)
# clean data
cGeneTable <- na.omit(cGeneTable)
cGeneTable <- cGeneTable %>%
filter(gam_chr=='3L'|gam_chr=='2L', atr_chr!='3R')
source('./R/2nd clean.R')
# add through coordinate for every sp==============================================================
#alb---------------------------------------------------------------------------------------------
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
alb_lims <- c(
max(cGeneTable$alb_start[cGeneTable$alb_chr=='3L']),
min(cGeneTable$alb_end[cGeneTable$alb_chr=='3L']),
max(cGeneTable$alb_end[cGeneTable$alb_chr=='3R']),
min(cGeneTable$alb_start[cGeneTable$alb_chr=='3R'])
)
#atr---------------------------------------------------------------------------------------------
atr_lims <- c(
max(cGeneTable$atr_start[cGeneTable$atr_chr == '2L']),
min(cGeneTable$atr_end[cGeneTable$atr_chr == '2L']),
max(cGeneTable$atr_start[cGeneTable$atr_chr == '2R']),
min(cGeneTable$atr_end[cGeneTable$atr_chr == '2R']),
min(cGeneTable$atr_start[cGeneTable$atr_chr == '3L']),
max(cGeneTable$atr_end[cGeneTable$atr_chr == '3L'])
)
#gam---------------------------------------------------------------------------------------------
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
gam_lims <- c(
max(cGeneTable$gam_start[cGeneTable$gam_chr=='2L']),
min(cGeneTable$gam_end[cGeneTable$gam_chr=='2L']),
min(cGeneTable$gam_start[cGeneTable$gam_chr=='3L']),
max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
)
#create comparisons
alb_atr_comparison <- as.comparison(data.frame(
start1=cGeneTable$alb_start, end1=cGeneTable$alb_end,
start2=cGeneTable$atr_start, end2=cGeneTable$atr_end
))
atr_gam_comparition <- as.comparison(data.frame(
start1=cGeneTable$atr_start, end1=cGeneTable$atr_end,
start2=cGeneTable$gam_start, end2=cGeneTable$gam_end
))
# create dna_seqs
alb_col <- rep('red', nrow(cGeneTable))
alb_col[cGeneTable$alb_strand=='-1'] <- 'blue'
alb_seq <- dna_seg(data.frame(
name=cGeneTable$alb_ID,
start=cGeneTable$alb_start,
end=cGeneTable$alb_end,
strand=cGeneTable$alb_strand,
col=alb_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
atr_col <- rep('red', nrow(cGeneTable))
atr_col[cGeneTable$atr_strand=='-1'] <- 'blue'
atr_seq <- dna_seg(data.frame(
name=cGeneTable$atr_ID,
start=cGeneTable$atr_start,
end=cGeneTable$atr_end,
strand=cGeneTable$atr_strand,
col=atr_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
gam_col <- rep('red', nrow(cGeneTable))
gam_col[cGeneTable$gam_strand=='-1'] <- 'blue'
gam_seq <- dna_seg(data.frame(
name=cGeneTable$gam_ID,
start=cGeneTable$gam_start,
end=cGeneTable$gam_end,
strand=cGeneTable$gam_strand,
col=gam_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
atr_col <- rep('red', nrow(cGeneTable))
atr_col[cGeneTable$atr_strand=='-1'] <- 'blue'
atr_seq <- dna_seg(data.frame(
name=cGeneTable$atr_ID,
start=cGeneTable$atr_start,
end=cGeneTable$atr_end,
strand=cGeneTable$atr_strand,
col=atr_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
cGeneTable$atr_strand
typeof(cGeneTable$atr_strand)
atr_col <- rep('red', nrow(cGeneTable))
atr_col[cGeneTable$atr_strand=='-1'] <- 'blue'
atr_seq <- dna_seg(data.frame(
name=cGeneTable$atr_ID,
start=cGeneTable$atr_start,
end=cGeneTable$atr_end,
strand=as.integer(cGeneTable$atr_strand),
col=atr_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
dna_seqs <- list(alb_seq, atr_seq, gam_seq)
#plot
plot_gene_map(
dna_segs = dna_seqs,
comparisons = list(alb_atr_comparison, atr_gam_comparition),
xlims = list(alb_lims, atr_lims, gam_lims)
)
dGeneTable <- read.csv2('./data/2chr_alb_atr_sin_gam_dirty.csv', na.strings = c(''), stringsAsFactors = FALSE)
names(dGeneTable) <- c(
'alb_ID', 'alb_chr', 'alb_start', 'alb_end', 'alb_strand',
'atr_ID', 'atr_scf', 'atr_start', 'atr_end',
'fun_ID', 'fun_scf', 'fun_start', 'fun_end',
'gam_ID', 'gam_chr', 'gam_start', 'gam_end',
'sin_ID', 'sin_scf', 'sin_start', 'sin_end',
'steph_ID', 'steph_scf', 'steph_start', 'steph_end'
)
dGeneTable <- dGeneTable %>%
select(alb_ID, alb_chr, alb_start, alb_end, alb_strand, atr_ID, atr_scf, atr_start, atr_end, gam_ID, gam_chr, gam_start, gam_end)
# remove strings with empty cells
dGeneTable <-  na.omit(dGeneTable)
# remove all duplicates
dGeneTable <- dGeneTable[!(duplicated(dGeneTable$alb_ID, fromLast = TRUE) | duplicated(dGeneTable$alb_ID)), ]
dGeneTable <- dGeneTable[!(duplicated(dGeneTable$atr_ID, fromLast = TRUE) | duplicated(dGeneTable$atr_ID)),]
dGeneTable <- dGeneTable[!(duplicated(dGeneTable$gam_ID, fromLast = TRUE) | duplicated(dGeneTable$gam_ID)),]
# remove unkn chromosom of gam
dGeneTable$alb_chr <- as.factor(dGeneTable$alb_chr)
dGeneTable$atr_scf <- as.factor(dGeneTable$atr_scf)
dGeneTable$gam_chr <- as.factor(dGeneTable$gam_chr)
dGeneTable <- dGeneTable[which(dGeneTable$gam_chr !='UNKN'),]
# Change rank
row.names(dGeneTable) <- 1:nrow(dGeneTable)
# write table to get strand from vectorbase biomart
write.csv2(dGeneTable, './data/GeneTableForGetStrand.csv') # using this table for extract strands from biomart
# read data from biomart
atr_strands <- read.csv('./data/atr_strands.csv')
gam_strands <- read.csv('./data/gam_strands.csv')
# paste this data in exsisting order
dGeneTable$atr_strand <- atr_strands$Strand[match(dGeneTable$atr_ID, atr_strands$Gene.stable.ID)]
dGeneTable$gam_strand <- gam_strands$Strand[match(dGeneTable$gam_ID, gam_strands$Gene.stable.ID)]
# reorder columns
dGeneTable <- dGeneTable[, c(1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 10, 11, 12, 13, 15)]
rm(atr_strands, gam_strands)
rm(alb_atr_comparison, atr_gam_comparition, alb_seq, gam_seq, atr_seq, cGeneTable, )
rm(alb_col, alb_lims, atr_col, atr_lims, dna_seqs, gam_col, gam_lims)
source('./R/clean_first_data.R')
source('./R/clean_first_data.R')
View(dGeneTable)
source('./R/functions/through_genes.R')
atr_genes <-  dGeneTable %>%
select(atr_ID, atr_scf, atr_start, atr_end, atr_strand)
atr_scf_order <- read.csv2('./data/atr_order.csv')
sum(atr_scf_order$Size)
atr_genes <- through_num(atr_genes, atr_scf_order)
max(atr_genes$tEnd)
max(atr_genes$tEnd)
View(atr_genes)
max(na.rm(atr_genes$tEnd))
max(na.omit(atr_genes$tEnd))
View(dGeneTable)
source('./R/functions/through_genes.R')
atr_scf_order <- read.csv2('./data/atr_order.csv')
sum(atr_scf_order$Size)
atr_genes <- through_num(atr_genes, atr_scf_order)
max(na.omit(atr_genes$tEnd))
View(atr_genes)
atr_genes <-  dGeneTable %>%
select(atr_ID, atr_scf, atr_start, atr_end, atr_strand)
atr_scf_order <- read.csv2('./data/atr_order.csv')
sum(atr_scf_order$Size)
atr_genes <- through_num(atr_genes, atr_scf_order)
max(na.omit(atr_genes$tEnd))
View(atr_genes)
source('./R/2nd clean.R')
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
alb_lims <- c(
max(cGeneTable$alb_start[cGeneTable$alb_chr=='3L']),
min(cGeneTable$alb_end[cGeneTable$alb_chr=='3L']),
max(cGeneTable$alb_end[cGeneTable$alb_chr=='3R']),
min(cGeneTable$alb_start[cGeneTable$alb_chr=='3R'])
)
#atr---------------------------------------------------------------------------------------------
atr_lims <- c(
max(cGeneTable$atr_start[cGeneTable$atr_chr == '2L']),
min(cGeneTable$atr_end[cGeneTable$atr_chr == '2L']),
max(cGeneTable$atr_start[cGeneTable$atr_chr == '2R']),
min(cGeneTable$atr_end[cGeneTable$atr_chr == '2R']),
min(cGeneTable$atr_start[cGeneTable$atr_chr == '3L']),
max(cGeneTable$atr_end[cGeneTable$atr_chr == '3L'])
)
#gam---------------------------------------------------------------------------------------------
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
gam_lims <- c(
max(cGeneTable$gam_start[cGeneTable$gam_chr=='2L']),
min(cGeneTable$gam_end[cGeneTable$gam_chr=='2L']),
min(cGeneTable$gam_start[cGeneTable$gam_chr=='3L']),
max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
)
#create comparisons
alb_atr_comparison <- as.comparison(data.frame(
start1=cGeneTable$alb_start, end1=cGeneTable$alb_end,
start2=cGeneTable$atr_start, end2=cGeneTable$atr_end
))
atr_gam_comparition <- as.comparison(data.frame(
start1=cGeneTable$atr_start, end1=cGeneTable$atr_end,
start2=cGeneTable$gam_start, end2=cGeneTable$gam_end
))
# create dna_seqs
alb_col <- rep('red', nrow(cGeneTable))
alb_col[cGeneTable$alb_strand=='-1'] <- 'blue'
alb_seq <- dna_seg(data.frame(
name=cGeneTable$alb_ID,
start=cGeneTable$alb_start,
end=cGeneTable$alb_end,
strand=cGeneTable$alb_strand,
col=alb_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
atr_col <- rep('red', nrow(cGeneTable))
atr_col[cGeneTable$atr_strand=='-1'] <- 'blue'
atr_seq <- dna_seg(data.frame(
name=cGeneTable$atr_ID,
start=cGeneTable$atr_start,
end=cGeneTable$atr_end,
strand=as.integer(cGeneTable$atr_strand),
col=atr_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
gam_col <- rep('red', nrow(cGeneTable))
gam_col[cGeneTable$gam_strand=='-1'] <- 'blue'
gam_seq <- dna_seg(data.frame(
name=cGeneTable$gam_ID,
start=cGeneTable$gam_start,
end=cGeneTable$gam_end,
strand=cGeneTable$gam_strand,
col=gam_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
dna_seqs <- list(alb_seq, atr_seq, gam_seq)
names(dna_seqs) <- c('alb 3L-\\-3R(rev)', 'atr 3L-\\-2R-\\-2L', 'gam 3L-\\-2L')
#plot
plot_gene_map(
dna_segs = dna_seqs,
comparisons = list(alb_atr_comparison, atr_gam_comparition),
xlims = list(alb_lims, atr_lims, gam_lims)
)
source('./R/2nd clean.R')
# add through coordinate for every sp==============================================================
#alb---------------------------------------------------------------------------------------------
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
alb_lims <- c(
max(cGeneTable$alb_start[cGeneTable$alb_chr=='3L']),
min(cGeneTable$alb_end[cGeneTable$alb_chr=='3L']),
max(cGeneTable$alb_end[cGeneTable$alb_chr=='3R']),
min(cGeneTable$alb_start[cGeneTable$alb_chr=='3R'])
)
#atr---------------------------------------------------------------------------------------------
atr_lims <- c(
max(cGeneTable$atr_start[cGeneTable$atr_chr == '2L']),
min(cGeneTable$atr_end[cGeneTable$atr_chr == '2L']),
max(cGeneTable$atr_start[cGeneTable$atr_chr == '2R']),
min(cGeneTable$atr_end[cGeneTable$atr_chr == '2R']),
min(cGeneTable$atr_start[cGeneTable$atr_chr == '3L']),
max(cGeneTable$atr_end[cGeneTable$atr_chr == '3L'])
)
#gam---------------------------------------------------------------------------------------------
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
gam_lims <- c(
max(cGeneTable$gam_start[cGeneTable$gam_chr=='2L']),
min(cGeneTable$gam_end[cGeneTable$gam_chr=='2L']),
min(cGeneTable$gam_start[cGeneTable$gam_chr=='3L']),
max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
)
#create comparisons
alb_atr_comparison <- as.comparison(data.frame(
start1=cGeneTable$alb_start, end1=cGeneTable$alb_end,
start2=cGeneTable$atr_start, end2=cGeneTable$atr_end
))
atr_gam_comparition <- as.comparison(data.frame(
start1=cGeneTable$atr_start, end1=cGeneTable$atr_end,
start2=cGeneTable$gam_start, end2=cGeneTable$gam_end
))
# create dna_seqs
alb_col <- rep('red', nrow(cGeneTable))
alb_col[cGeneTable$alb_strand=='-1'] <- 'blue'
alb_seq <- dna_seg(data.frame(
name=cGeneTable$alb_ID,
start=cGeneTable$alb_start,
end=cGeneTable$alb_end,
strand=cGeneTable$alb_strand,
col=alb_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
atr_col <- rep('red', nrow(cGeneTable))
atr_col[cGeneTable$atr_strand=='-1'] <- 'blue'
atr_seq <- dna_seg(data.frame(
name=cGeneTable$atr_ID,
start=cGeneTable$atr_start,
end=cGeneTable$atr_end,
strand=as.integer(cGeneTable$atr_strand),
col=atr_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
gam_col <- rep('red', nrow(cGeneTable))
gam_col[cGeneTable$gam_strand=='-1'] <- 'blue'
gam_seq <- dna_seg(data.frame(
name=cGeneTable$gam_ID,
start=cGeneTable$gam_start,
end=cGeneTable$gam_end,
strand=cGeneTable$gam_strand,
col=gam_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
dna_seqs <- list(alb_seq, atr_seq, gam_seq)
names(dna_seqs) <- c('alb 3L-\\-3R(rev)', 'atr 3L-\\-2R-\\-2L', 'gam 3L-\\-2L')
#plot
plot_gene_map(
dna_segs = dna_seqs,
comparisons = list(alb_atr_comparison, atr_gam_comparition),
xlims = list(alb_lims, atr_lims, gam_lims)
)
source('./R/2nd clean.R')
# add through coordinate for every sp==============================================================
#alb---------------------------------------------------------------------------------------------
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_start[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] <-
cGeneTable$alb_end[cGeneTable$alb_chr=='3R'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3L'])
alb_lims <- c(
max(cGeneTable$alb_start[cGeneTable$alb_chr=='3L']),
min(cGeneTable$alb_end[cGeneTable$alb_chr=='3L']),
max(cGeneTable$alb_end[cGeneTable$alb_chr=='3R']),
min(cGeneTable$alb_start[cGeneTable$alb_chr=='3R'])
)
#atr---------------------------------------------------------------------------------------------
atr_lims <- c(
min(cGeneTable$atr_start[cGeneTable$atr_chr == '2L']),
max(cGeneTable$atr_end[cGeneTable$atr_chr == '2L']),
max(cGeneTable$atr_start[cGeneTable$atr_chr == '2R']),
min(cGeneTable$atr_end[cGeneTable$atr_chr == '2R']),
max(cGeneTable$atr_start[cGeneTable$atr_chr == '3L']),
min(cGeneTable$atr_end[cGeneTable$atr_chr == '3L'])
)
#gam---------------------------------------------------------------------------------------------
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] <-
cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
gam_lims <- c(
max(cGeneTable$gam_start[cGeneTable$gam_chr=='2L']),
min(cGeneTable$gam_end[cGeneTable$gam_chr=='2L']),
min(cGeneTable$gam_start[cGeneTable$gam_chr=='3L']),
max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])
)
#create comparisons
alb_atr_comparison <- as.comparison(data.frame(
start1=cGeneTable$alb_start, end1=cGeneTable$alb_end,
start2=cGeneTable$atr_start, end2=cGeneTable$atr_end
))
atr_gam_comparition <- as.comparison(data.frame(
start1=cGeneTable$atr_start, end1=cGeneTable$atr_end,
start2=cGeneTable$gam_start, end2=cGeneTable$gam_end
))
# create dna_seqs
alb_col <- rep('red', nrow(cGeneTable))
alb_col[cGeneTable$alb_strand=='-1'] <- 'blue'
alb_seq <- dna_seg(data.frame(
name=cGeneTable$alb_ID,
start=cGeneTable$alb_start,
end=cGeneTable$alb_end,
strand=cGeneTable$alb_strand,
col=alb_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
atr_col <- rep('red', nrow(cGeneTable))
atr_col[cGeneTable$atr_strand=='-1'] <- 'blue'
atr_seq <- dna_seg(data.frame(
name=cGeneTable$atr_ID,
start=cGeneTable$atr_start,
end=cGeneTable$atr_end,
strand=as.integer(cGeneTable$atr_strand),
col=atr_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
gam_col <- rep('red', nrow(cGeneTable))
gam_col[cGeneTable$gam_strand=='-1'] <- 'blue'
gam_seq <- dna_seg(data.frame(
name=cGeneTable$gam_ID,
start=cGeneTable$gam_start,
end=cGeneTable$gam_end,
strand=cGeneTable$gam_strand,
col=gam_col,
gene_type=rep('blocks', nrow(cGeneTable))
))
dna_seqs <- list(alb_seq, atr_seq, gam_seq)
names(dna_seqs) <- c('alb 3L↘ | 3R↘', 'atr 2L↗ | 2R↘ | 3L↘', 'gam 2L↘ | 3L↗')
#plot
plot_gene_map(
dna_segs = dna_seqs,
comparisons = list(alb_atr_comparison, atr_gam_comparition),
xlims = list(alb_lims, atr_lims, gam_lims)
)
<- c('alb 3L↘ | 3R↘', 'atr 2L↑ | 2R↘ | 3L↘', 'gam 2L↘ | 3L↑')
#plot
plot_gene_map(
dna_segs = dna_seqs,
comparisons = list(alb_atr_comparison, atr_gam_comparition),
xlims = list(alb_lims, atr_lims, gam_lims)
)
names(dna_seqs) <- c('alb 3L↘ | 3R↘', 'atr 2L↑ | 2R↘ | 3L↘', 'gam 2L↘ | 3L↑')
#plot
plot_gene_map(
dna_segs = dna_seqs,
comparisons = list(alb_atr_comparison, atr_gam_comparition),
xlims = list(alb_lims, atr_lims, gam_lims)
)
names(dna_seqs) <- c('alb 3L↓ | 3R↓', 'atr 2L↑ | 2R↓ | 3L↓', 'gam 2L↓ | 3L↑')
#plot
plot_gene_map(
dna_segs = dna_seqs,
comparisons = list(alb_atr_comparison, atr_gam_comparition),
xlims = list(alb_lims, atr_lims, gam_lims)
)
