{
    "collab_server" : "",
    "contents" : "source('./R/2nd clean.R')\nsource('./R/functions/xlims_generator.R')\n\n# add through coordinate for every sp==============================================================\n  #alb---------------------------------------------------------------------------------------------\ncGeneTable$alb_start[cGeneTable$alb_chr=='3L'] <- \n  cGeneTable$alb_start[cGeneTable$alb_chr=='3L'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3R'])\ncGeneTable$alb_end[cGeneTable$alb_chr=='3L'] <- \n  cGeneTable$alb_end[cGeneTable$alb_chr=='3L'] + max(cGeneTable$alb_end[cGeneTable$alb_chr=='3R'])\n\nalb_chr_order <- c('3L', '3R')\nalb_chr_strand <- c(FALSE, FALSE)\n\nalb_lims <- xlimsGen(alb_chr_order, alb_chr_strand, cGeneTable$alb_start, cGeneTable$alb_end, cGeneTable$alb_chr)\nrm(alb_chr_order, alb_chr_strand)\n  #atr---------------------------------------------------------------------------------------------\n\n\natr_chr_order <- c('2L', '2R', '3L')\natr_chr_strand <- c(TRUE, FALSE, FALSE)\n\natr_lims <- xlimsGen(atr_chr_order, atr_chr_strand, cGeneTable$atr_start, cGeneTable$atr_end, cGeneTable$atr_chr)\nrm(atr_chr_order, atr_chr_strand)\n  #gam---------------------------------------------------------------------------------------------\n\ncGeneTable$gam_start[cGeneTable$gam_chr=='2L'] <- \n  cGeneTable$gam_start[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])\n\ncGeneTable$gam_end[cGeneTable$gam_chr=='2L'] <- \n  cGeneTable$gam_end[cGeneTable$gam_chr=='2L'] + max(cGeneTable$gam_end[cGeneTable$gam_chr=='3L'])\n\ngam_chr_order <- c('2L', '3L')\ngam_chr_strand <- c(FALSE, TRUE)\n\ngam_lims <- xlimsGen(gam_chr_order, gam_chr_strand, cGeneTable$gam_star, cGeneTable$gam_end, cGeneTable$gam_chr)\nrm(gam_chr_order, gam_chr_strand)\n#create comparisons\n\nalb_atr_comparison <- as.comparison(data.frame(\n  start1=cGeneTable$alb_start, end1=cGeneTable$alb_end,\n  start2=cGeneTable$atr_start, end2=cGeneTable$atr_end\n))\n\natr_gam_comparition <- as.comparison(data.frame(\n  start1=cGeneTable$atr_start, end1=cGeneTable$atr_end,\n  start2=cGeneTable$gam_start, end2=cGeneTable$gam_end\n))\n\n# create dna_seqs\nalb_col <- rep('red', nrow(cGeneTable))\nalb_col[cGeneTable$alb_strand=='-1'] <- 'blue'\n\nalb_seq <- dna_seg(data.frame(\n  name=cGeneTable$alb_ID,\n  start=cGeneTable$alb_start,\n  end=cGeneTable$alb_end,\n  strand=cGeneTable$alb_strand,\n  col=alb_col,\n  gene_type=rep('blocks', nrow(cGeneTable))\n))\n\natr_col <- rep('red', nrow(cGeneTable))\natr_col[cGeneTable$atr_strand=='-1'] <- 'blue'\n\natr_seq <- dna_seg(data.frame(\n  name=cGeneTable$atr_ID,\n  start=cGeneTable$atr_start,\n  end=cGeneTable$atr_end,\n  strand=as.integer(cGeneTable$atr_strand),\n  col=atr_col,\n  gene_type=rep('blocks', nrow(cGeneTable))\n))\n\ngam_col <- rep('red', nrow(cGeneTable))\ngam_col[cGeneTable$gam_strand=='-1'] <- 'blue'\n\ngam_seq <- dna_seg(data.frame(\n  name=cGeneTable$gam_ID,\n  start=cGeneTable$gam_start,\n  end=cGeneTable$gam_end,\n  strand=cGeneTable$gam_strand,\n  col=gam_col,\n  gene_type=rep('blocks', nrow(cGeneTable))\n))\n\ndna_seqs <- list(alb_seq, atr_seq, gam_seq)\nnames(dna_seqs) <- c('alb 3L↓ | 3R↓', 'atr 2L↑ | 2R↓ | 3L↓', 'gam 2L↓ | 3L↑')\n#plot\nplot_gene_map(\n  dna_segs = dna_seqs,\n  comparisons = list(alb_atr_comparison, atr_gam_comparition),\n  xlims = list(alb_lims, atr_lims, gam_lims),\n  scale = FALSE, dna_seg_scale = TRUE, gene_type = 'side_blocks'\n)\n",
    "created" : 1485187785528.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3966306503",
    "id" : "C33851E3",
    "lastKnownWriteTime" : 1485237457,
    "last_content_update" : 1485237457190,
    "path" : "~/prog/r/2chr_genePlot/R/visualize.R",
    "project_path" : "R/visualize.R",
    "properties" : {
        "source_window_id" : ""
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}